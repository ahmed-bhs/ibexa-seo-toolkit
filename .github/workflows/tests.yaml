name: "Tests"

on: [push, pull_request]

env:
    fail-fast: true
    PHPUNIT_FLAGS: "-v"
    SYMFONY_PHPUNIT_DIR: "$HOME/symfony-bridge/.phpunit"
    REST_TEST_CONFIG: "phpunit-integration-rest.xml"
    SYMFONY_REQUIRE: ">=4.4"
    # 40x: Since symfony/monolog-bridge 5.2:
    # Passing an actionLevel (int|string) as constructor's 3rd argument of
    # "Symfony\Bridge\Monolog\Handler\FingersCrossed\HttpCodeActivationStrategy"
    # is deprecated, "Monolog\Handler\FingersCrossed\ActivationStrategyInterface" expected.
    SYMFONY_DEPRECATIONS_HELPER: 40
    COMPOSE_FILE: "doc/docker/base-dev.yml:doc/docker/selenium.yml"
    PROJECT_VERSION: "^3.3"
    TEST_CONFIG: "phpunit.xml"
jobs:
    test:
        name: "${{ matrix.operating-system }} / PHP ${{ matrix.php-version }}"
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php-version: ['7.3']

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v2.3.3

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@2.7.0
              with:
                  coverage: "none"
                  extensions: intl
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2

            - name: "Set composer cache directory"
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: "Cache composer"
              uses: actions/cache@v2.1.2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('composer.lock') }}
                  restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-

            - name: "Composer install"
              id: install
              run: composer require --dev ibexa/ci-scripts:"^0.1@dev" --no-interaction --no-progress

            - name: "Prepare system"
              run: ./vendor/bin/prepare_project_edition.sh oss ${PROJECT_VERSION} ${COMPOSE_FILE}

            - name: "Run tests"
              run: php -d memory_limit=-1 vendor/bin/phpunit
